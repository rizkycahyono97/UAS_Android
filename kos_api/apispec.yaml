# Versi spesifikasi OpenAPI
openapi: 3.0.3

# Informasi dasar tentang API
info:
  title: "Kost API v1"
  description: "Dokumentasi API untuk layanan pencarian Kost (Nge-Kos Yuk! Ponorogo)."
  version: "1.0"

# Server tempat API di-host
servers:
  - url: http://localhost:9000/api/v1
    description: Development Server

# Tag untuk mengelompokkan endpoint
tags:
  - name: Kost
    description: Semua operasi yang berhubungan dengan data Kost

# Definisi semua path (endpoint)
paths:
  /kosts:
    get:
      tags:
        - Kost
      summary: "Mendapatkan Daftar Kost dengan Filter"
      description: |-
        Mengambil daftar kost yang bisa difilter menggunakan query parameter. 
        Jika tidak ada parameter, semua data kost akan dikembalikan.
      parameters:
        - name: nama
          in: query
          description: Filter berdasarkan nama kos (pencarian parsial).
          schema:
            type: string
        - name: alamat
          in: query
          description: Filter berdasarkan alamat kos (pencarian parsial).
          schema:
            type: string
        - name: tipe
          in: query
          description: Filter berdasarkan tipe kos.
          schema:
            type: string
            enum: [putra, putri, campur]
        - name: status_ketersediaan
          in: query
          description: Filter berdasarkan status ketersediaan.
          schema:
            type: string
            enum: [tersedia, penuh]
        - name: min_harga
          in: query
          description: Filter harga minimum per bulan.
          schema:
            type: integer
        - name: max_harga
          in: query
          description: Filter harga maksimum per bulan.
          schema:
            type: integer
      responses:
        '200':
          description: "Sukses. Mengembalikan daftar kost yang cocok dengan kriteria."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessKostListResponse'
        '404':
          description: "Not Found. Tidak ada kost yang cocok dengan kriteria."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /kosts/kos/{id}:
    get:
      tags:
        - Kost
      summary: "Mendapatkan Detail Kost berdasarkan ID"
      description: "Mengambil informasi detail dari satu kost spesifik menggunakan ID uniknya."
      parameters:
        - name: id
          in: path
          description: ID unik dari kost yang ingin dilihat.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Sukses. Mengembalikan detail kost."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessKostDetailResponse'
        '404':
          description: "Not Found. Kost dengan ID tersebut tidak ditemukan."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

# Komponen yang bisa digunakan kembali
components:
  schemas:
    # Skema untuk objek Fasilitas
    Fasilitas:
      type: object
      properties:
        id:
          type: integer
          example: 4
        nama_fasilitas:
          type: string
          example: "dolorum"

    # Skema untuk objek KosImage
    KosImage:
      type: object
      properties:
        id:
          type: integer
          example: 4
        kos_id:
          type: integer
          example: 4
        url_image:
          type: string
          format: uri
          example: "http://www.jerde.biz/"

    # Skema untuk objek utama Kost
    Kost:
      type: object
      properties:
        id:
          type: integer
          example: 4
        user_id:
          type: integer
          example: 4
        nama:
          type: string
          example: "King Port"
        deskripsi:
          type: string
          example: "Aperiam voluptatem ipsum ullam a possimus consequatur."
        tipe:
          type: string
          enum: [putra, putri, campur]
          example: "campur"
        alamat:
          type: string
          example: "970 Brooks Glen\nGladysville, PA 08366"
        harga:
          type: integer
          example: 944695264
        status_ketersediaan:
          type: string
          enum: [tersedia, penuh]
          example: "penuh"
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        fasilitas:
          type: array
          items:
            $ref: '#/components/schemas/Fasilitas'
        kos_images:
          type: array
          items:
            $ref: '#/components/schemas/KosImage'

    # Skema untuk pembungkus respons sukses (daftar)
    SuccessKostListResponse:
      type: object
      properties:
        code:
          type: string
          example: "200"
        message:
          type: string
          example: "OK"
        data:
          type: array
          items:
            $ref: '#/components/schemas/Kost'

    # Skema untuk pembungkus respons sukses (detail)
    SuccessKostDetailResponse:
      type: object
      properties:
        code:
          type: string
          example: "200"
        message:
          type: string
          example: "OK"
        data:
          $ref: '#/components/schemas/Kost'

    # Skema untuk pembungkus respons error
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          example: "404"
        message:
          type: string
          example: "Not Found"
        data:
          type: object
          nullable: true
          example: null